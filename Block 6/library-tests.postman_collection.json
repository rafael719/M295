{
  "info": {
    "name": "Library API Tests",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Books - Happy Path Tests",
      "item": [
        {
          "name": "Create Book",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Book is created with correct data\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.title).to.equal(\"The Great Gatsby\");",
                  "    pm.expect(response.author).to.equal(\"F. Scott Fitzgerald\");",
                  "    pm.expect(response.isbn).to.exist;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"The Great Gatsby\",\n    \"author\": \"F. Scott Fitzgerald\",\n    \"isbn\": \"978-3-16-148410-0\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/books",
              "host": ["{{baseUrl}}"],
              "path": ["books"]
            }
          }
        },
        {
          "name": "Get All Books",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response is an array\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(Array.isArray(response)).to.be.true;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/books",
              "host": ["{{baseUrl}}"],
              "path": ["books"]
            }
          }
        }
      ]
    },
    {
      "name": "Lending - Happy Path Tests",
      "item": [
        {
          "name": "Lend Book",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Lending is recorded correctly\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.bookId).to.exist;",
                  "    pm.expect(response.userId).to.exist;",
                  "    pm.expect(response.lendDate).to.exist;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"userId\": \"123\",\n    \"bookId\": \"{{bookId}}\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/books/{{bookId}}/lend",
              "host": ["{{baseUrl}}"],
              "path": ["books", "{{bookId}}", "lend"]
            }
          }
        }
      ]
    },
    {
      "name": "Error Cases Tests",
      "item": [
        {
          "name": "Create Book without Title",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test(\"Error message mentions missing title\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.error).to.include('title');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"author\": \"F. Scott Fitzgerald\",\n    \"isbn\": \"978-3-16-148410-0\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/books",
              "host": ["{{baseUrl}}"],
              "path": ["books"]
            }
          }
        },
        {
          "name": "Lend Non-existent Book",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 404\", function () {",
                  "    pm.response.to.have.status(404);",
                  "});",
                  "",
                  "pm.test(\"Error message mentions book not found\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.error).to.include('not found');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"userId\": \"123\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/books/nonexistent-id/lend",
              "host": ["{{baseUrl}}"],
              "path": ["books", "nonexistent-id", "lend"]
            }
          }
        },
        {
          "name": "Lend Already Borrowed Book",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test(\"Error message mentions book already borrowed\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.error).to.include('already borrowed');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"userId\": \"456\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/books/{{borrowedBookId}}/lend",
              "host": ["{{baseUrl}}"],
              "path": ["books", "{{borrowedBookId}}", "lend"]
            }
          }
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000"
    }
  ]
}
